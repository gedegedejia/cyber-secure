import matplotlib.pyplot as plt
plt.rcParams['font.sans-serif'] = ['SimSun']  # 中文宋体
plt.rcParams['axes.unicode_minus'] = False
def read_txt(filename):
    """读数据文件，返回字符串"""
    with open(filename) as fr:
        return fr.read()
def plot_line(tiobe):
    """绘制编程语言热度曲线，python曲线宽度设为4，其他语言曲线宽度设为2。
    程序语言名做为线标签"""
    for line in tiobe:
        lan_name = list(line.keys())[0]  # 当前处理的语言名，字符串
        data = line[lan_name]  # 当前处理的语言的热度数据列表
        date_of_lan = [f'{x[0][0]}-{x[0][1]:02}-{x[0][2]:02}' for x in data]
        rank = [x[1] for x in data]
        if lan_name == 'Python':
            width = 4
        else:
            width = 2
        plt.plot(date_of_lan, rank, label=lan_name, linewidth=width)
def plot_label():
    """横坐标刻度为偶数年份，图名'The TIOBE Programming Community index'，y标签'热度'，图注位置为'lower left'"""
    plt.xticks(
        ['2002-05-29', '2004-05-30', '2006-05-01', '2008-05-01', '2010-06-06', '2012-05-10', '2014-05-08',
         '2016-05-05', '2018-05-10', '2020-05-01', '2022-05-04'],
        ['2002', '2004', '2006', '2008', '2010', '2012', '2014',
         '2016', '2018', '2020', '2022'], rotation=-45)
    plt.title('The TIOBE Programming Community index')
    plt.ylabel('热度')
    plt.legend(loc='lower left')
if __name__ == '__main__':
    tiobe_index = read_txt('step1/tiobe202211.txt')
    tiobe_index = eval(tiobe_index.replace('name : ', '').replace(',data ', '').replace('Date.UTC', ''))
    plot_line(tiobe_index)
    plot_label()
    plt.savefig('result/result.jpg')
    plt.show()

2
import matplotlib.pyplot as plt
plt.rcParams['font.sans-serif'] = ['SimSun']  # 中文宋体
plt.rcParams['axes.unicode_minus'] = False
def read_txt(filename):
    """读数据文件，返回字符串"""
    with open(filename) as f:
        return f.read()
def draw_pie(tiobe):
    # plt.subplot(121)
    lan_name = [list(line.keys())[0] for line in tiobe] + ['other']
    rank = [list(line.values())[-1][-1][-1] for line in tiobe]
    rank = rank + [100 - round(sum(rank), 2)]
    exp = [0.1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
    # colors = cm.rainbow(np.arange(len(rank)) / len(rank))  # colormaps: Paired, autumn, rainbow, gray,spring,Darks
    plt.pie(rank, labels=lan_name, explode=exp, pctdistance=0.8,
            startangle=90, autopct='%2.1f%%', shadow=True,
            labeldistance=1.1)
    plt.legend(loc='lower right', bbox_to_anchor=(1.3, 0))  # 右下角例
if __name__ == '__main__':
    tiobe_index = read_txt('step2/tiobe202211.txt')
    tiobe_index = eval(tiobe_index.replace('name : ', '').replace(',data ', '').replace('Date.UTC', ''))
    draw_pie(tiobe_index)
    plt.savefig('result/result.jpg')
    plt.show()

3
import matplotlib.pyplot as plt
plt.rcParams['font.sans-serif'] = ['SimSun']  # 中文宋体
plt.rcParams['axes.unicode_minus'] = False
def read_txt(filename):
    """读数据文件，返回字符串"""
    with open(filename) as fr:
        return fr.read()
def plot_line(tiobe):
    """绘制编程语言热度曲线，python曲线宽度设为4，其他语言曲线宽度设为2。
    程序语言名做为线标签"""
    plt.figure(figsize=(12, 8))  # 图像大小1200*800像素
    for line in tiobe:
        lan_name = list(line.keys())[0]  # 当前处理的语言名，字符串
        data = line[lan_name]  # 当前处理的语言的热度数据列表
        date_of_lan = [f'{x[0][0]}-{x[0][1]:02}-{x[0][2]:02}' for x in data]
        rank = [x[1] for x in data]
        if lan_name == 'Python':
            width = 4
        else:
            width = 2
        plt.plot(date_of_lan, rank, label=lan_name, linewidth=width)
def plot_label():
    """横坐标刻度为偶数年份，图名'The TIOBE Programming Community index'，y标签'热度'，图例到主图下方
    增加横向主网格线，点划线，蓝色，宽度0.7"""
    plt.xticks(
        ['2002-05-29', '2004-05-30', '2006-05-01', '2008-05-01', '2010-06-06', '2012-05-10', '2014-05-08',
         '2016-05-05', '2018-05-10', '2020-05-01', '2022-05-04'],
        ['2002', '2004', '2006', '2008', '2010', '2012', '2014',
         '2016', '2018', '2020', '2022'])
    plt.title('The TIOBE Programming Community index')
    plt.ylabel('热度')
    plt.legend(bbox_to_anchor=(0., -0.12, 1., -.12), loc=8,  # 图例到主图下方
               ncol=5, mode="expand", borderaxespad=0.)
    plt.grid(which='major', axis='y', color='b', linestyle='-.', linewidth=0.7)  # 横向主网格线
if __name__ == '__main__':
    tiobe_index = read_txt('step3/tiobe202211.txt')
    tiobe_index = eval(tiobe_index.replace('name : ', '').replace(',data ', '').replace('Date.UTC', ''))  # 字符串替换，再转python数据类型
    plot_line(tiobe_index)
    plot_label()
    plt.savefig('result/result.jpg')
    plt.show() 

4
import matplotlib.pyplot as plt
from matplotlib import cm
import numpy as np
plt.rcParams['font.sans-serif'] = ['SimSun']  # 中文宋体
plt.rcParams['axes.unicode_minus'] = False
def read_txt(filename):
    """读数据文件，返回字符串"""
    with open(filename) as fr:
        return fr.read()
def draw_pie(tiobe):
    """绘制饼图，大小1200*800，图例在图上方每行3个，彩虹颜色"""
    plt.figure(figsize=(12, 8))  # 图像大小1200*800像素
    lan_name = [list(line.keys())[0] for line in tiobe] + ['other']
    rank = [list(line.values())[-1][-1][-1] for line in tiobe]
    rank = rank + [100 - round(sum(rank), 2)]
    exp = [0.1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
    colors = cm.rainbow(np.arange(len(rank)) / len(rank))  # colormaps: Paired, autumn, rainbow, gray,spring,Darks
    plt.pie(rank, labels=lan_name, explode=exp, pctdistance=0.8,
            startangle=90, autopct='%2.1f%%', shadow=True,
            labeldistance=1.1, colors=colors)
    plt.legend(bbox_to_anchor=(0., 0.96, 1., 0.1), loc=3, ncol=3, mode="expand", borderaxespad=0.)
if __name__ == '__main__':
    tiobe_index = read_txt('step4/tiobe202211.txt')
    tiobe_index = eval(tiobe_index.replace('name : ', '').replace(',data ', '').replace('Date.UTC', ''))
    draw_pie(tiobe_index)
    plt.savefig('result/result.jpg')
    plt.show() 
